/**
 * Test suite.
 */

import { $is, $str } from '../index.js';
import { describe, test, expect } from 'vitest';

describe('$str tests', async () => {
	test('$str.byteLength()', async () => {
		// <https://o5p.me/r833HP>
		expect($str.byteLength('abcdefghijklmnopqrstuvwxyzÍì∫0123456789')).toBe(39);
		expect($str.byteLength(new String('abcdefghijklmnopqrstuvwxyzÍì∫0123456789').valueOf())).toBe(39);
	});
	test('$str.charLength()', async () => {
		// <https://o5p.me/r833HP>
		expect($str.charLength('abcdefghijklmnopqrstuvwxyzÍì∫0123456789')).toBe(37);
		expect($str.charLength(new String('abcdefghijklmnopqrstuvwxyzÍì∫0123456789').valueOf())).toBe(37);
	});
	test('$str.fromBytes($str.toBytes())', async () => {
		expect($str.fromBytes($str.toBytes('abcdefghijklmnopqrstuvwxyzÍì∫0123456789'))).toBe('abcdefghijklmnopqrstuvwxyzÍì∫0123456789');
		expect($str.fromBytes($str.toBytes('√†√®√¨√≤√π√Ä√à√å√í√ô√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì'))).toBe('√†√®√¨√≤√π√Ä√à√å√í√ô√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì');
	});
	test('$str.fromChars($str.toChars())', async () => {
		expect($str.fromChars($str.toChars('abcdefghijklmnopqrstuvwxyzÍì∫0123456789'))).toBe('abcdefghijklmnopqrstuvwxyzÍì∫0123456789');
		expect($str.fromChars($str.toChars('√†√®√¨√≤√π√Ä√à√å√í√ô√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì'))).toBe('√†√®√¨√≤√π√Ä√à√å√í√ô√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì');
	});
	test('$str.deburr()', async () => {
		expect($str.deburr('heƒºl·πè, Íì∫ ... ü¶ä w…µr·∏ª…ñ!')).toBe('hello, Íì∫ ... ü¶ä w…µrl…ñ!');
		expect($str.deburr('√†√®√¨√≤√π√Ä√à√å√í√ô√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì')).toBe('aeiouAEIOUaeiouyAEIOUYaeiouAEIOUanoANOaeiouyAEIOUYcC√ü√ò√∏Aa√Ü√¶≈ì');
	});
	test('$str.asciiOnly()', async () => {
		expect($str.asciiOnly('heƒºl·πè, Íì∫ ... ü¶ä w…µr·∏ª…ñ!')).toBe('hello, .. ...  wrl!');
		expect($str.asciiOnly('√†√®√¨√≤√π√Ä√à√å√í√ô√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì')).toBe('aeiouAEIOUaeiouyAEIOUYaeiouAEIOUanoANOaeiouyAEIOUYcCAa');
	});
	test('$str.obpPartSafe()', async () => {
		expect($str.obpPartSafe('[heƒºl·πè, Íì∫ ... ü¶ä w…µr·∏ª…ñ!]')).toBe('‚¶çheƒºl·πè, ·±π·±π ·±π·±π·±π ü¶ä w…µr·∏ª…ñ!‚¶é');
		expect($str.obpPartSafe('√†√®√¨√≤√π√Ä√à√å√í√ô√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì')).toBe('√†√®√¨√≤√π√Ä√à√å√í√ô√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì');
	});
	test('$str.clip()', async () => {
		expect($str.clip('ü¶ä√∏√Ö√•abcdefg', { maxBytes: 9 })).toBe('ü¶ä[‚Ä¶]');
		expect($str.clip('abcdefgü¶ä√∏√Ö√•', { maxBytes: 10 })).toBe('abcde[‚Ä¶]');

		expect($str.byteLength($str.clip('ü¶ä√∏√Ö√•abcdefg', { maxBytes: 9 }))).toBe(9);
		expect($str.byteLength($str.clip('abcdefgü¶ä√∏√Ö√•', { maxBytes: 10 }))).toBe(10);

		expect($str.clip('ü¶ä√∏√Ö√•abcdefg', { maxChars: 10 })).toBe('ü¶ä√∏√Ö√•abc[‚Ä¶]');
		expect($str.clip('abcdefgü¶ä√∏√Ö√•', { maxChars: 10 })).toBe('abcdefg[‚Ä¶]');

		expect($str.charLength($str.clip('ü¶ä√∏√Ö√•abcdefg', { maxChars: 10 }))).toBe(10);
		expect($str.charLength($str.clip('abcdefgü¶ä√∏√Ö√•', { maxChars: 10 }))).toBe(10);
	});
	test('$str.splitWords()', async () => {
		expect($str.splitWords('[heƒºl·πè, Íì∫ ... ü¶ä w…µr·∏ª…ñ!]')).toStrictEqual(['heƒºl·πè', 'Íì∫', 'w…µr·∏ª…ñ']);

		expect($str.splitWords('foo-bar-bazBiz-PascalCase-snake_case-kebab-case')) //
			.toStrictEqual(['foo', 'bar', 'baz', 'Biz', 'Pascal', 'Case', 'snake', 'case', 'kebab', 'case']);

		expect($str.splitWords('foo bar bazBiz PascalCase snake_case kebab-case', { whitespaceOnly: true })) //
			.toStrictEqual(['foo', 'bar', 'bazBiz', 'PascalCase', 'snake_case', 'kebab-case']);

		expect($str.splitWords('aeiouAEIOUaeiouyAEIOUYaeiouAEIOUanoANOaeiouyAEIOUY√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì')) //
			.toStrictEqual(['aeiou', 'AEIO', 'Uaeiouy', 'AEIOU', 'Yaeiou', 'AEIO', 'Uano', 'AN', 'Oaeiouy', 'AEIOU', 'Y√ß', '√á√ü', '√ò√∏', '√Ö√•', '√Ü√¶≈ì']);

		expect($str.splitWords('√†√®√¨√≤√π√Ä√à√å√í√ô√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì')) //
			.toStrictEqual(['√†√®√¨√≤√π', '√Ä√à√å√í', '√ô√°√©√≠√≥√∫√Ω', '√Å√â√ç√ì√ö', '√ù√¢√™√Æ√¥√ª', '√Ç√ä√é√î', '√õ√£√±√µ', '√É√ë', '√ï√§√´√Ø√∂√º√ø', '√Ñ√ã√è√ñ√ú', '≈∏√ß', '√á√ü', '√ò√∏', '√Ö√•', '√Ü√¶≈ì']);
	});
	test('$str.lowerFirst()', async () => {
		expect($str.lowerFirst('Heƒºl·πè, Íì∫ ... ü¶ä w…µr·∏ª…ñ!')).toBe('heƒºl·πè, Íì∫ ... ü¶ä w…µr·∏ª…ñ!');
		expect($str.lowerFirst('[heƒºl·πè, Íì∫ ... ü¶ä w…µr·∏ª…ñ!]')).toBe('[heƒºl·πè, Íì∫ ... ü¶ä w…µr·∏ª…ñ!]');
		expect($str.lowerFirst('Foo-bar-bazBiz-PascalCase-snake_case-kebab-case')).toBe('foo-bar-bazBiz-PascalCase-snake_case-kebab-case');
		expect($str.lowerFirst('Foo bar bazBiz PascalCase snake_case kebab-case')).toBe('foo bar bazBiz PascalCase snake_case kebab-case');
		expect($str.lowerFirst('AeiouAEIOUaeiouyAEIOUYaeiouAEIOUanoANOaeiouyAEIOUY√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì')).toBe('aeiouAEIOUaeiouyAEIOUYaeiouAEIOUanoANOaeiouyAEIOUY√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì');
		expect($str.lowerFirst('√†√®√¨√≤√π√Ä√à√å√í√ô√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì')).toBe('√†√®√¨√≤√π√Ä√à√å√í√ô√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì');
		expect($str.lowerFirst('√Ä√à√å√í√ô√†√®√¨√≤√π√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì')).toBe('√†√à√å√í√ô√†√®√¨√≤√π√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì');
	});
	test('$str.upperFirst()', async () => {
		expect($str.upperFirst('heƒºl·πè, Íì∫ ... ü¶ä w…µr·∏ª…ñ!')).toBe('Heƒºl·πè, Íì∫ ... ü¶ä w…µr·∏ª…ñ!');
		expect($str.upperFirst('[heƒºl·πè, Íì∫ ... ü¶ä w…µr·∏ª…ñ!]')).toBe('[heƒºl·πè, Íì∫ ... ü¶ä w…µr·∏ª…ñ!]');
		expect($str.upperFirst('Foo-bar-bazBiz-PascalCase-snake_case-kebab-case')).toBe('Foo-bar-bazBiz-PascalCase-snake_case-kebab-case');
		expect($str.upperFirst('Foo bar bazBiz PascalCase snake_case kebab-case')).toBe('Foo bar bazBiz PascalCase snake_case kebab-case');
		expect($str.upperFirst('aeiouAEIOUaeiouyAEIOUYaeiouAEIOUanoANOaeiouyAEIOUY√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì')).toBe('AeiouAEIOUaeiouyAEIOUYaeiouAEIOUanoANOaeiouyAEIOUY√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì');
		expect($str.upperFirst('√†√®√¨√≤√π√Ä√à√å√í√ô√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì')).toBe('√Ä√®√¨√≤√π√Ä√à√å√í√ô√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì');
		expect($str.upperFirst('√Ä√à√å√í√ô√†√®√¨√≤√π√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì')).toBe('√Ä√à√å√í√ô√†√®√¨√≤√π√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì');
	});
	test('$str.capitalize()', async () => {
		expect($str.capitalize('heƒºl·πè, Íì∫ ... ü¶ä w…µr·∏ª…ñ!')).toBe('Heƒºl·πè, Íì∫ ... ü¶ä w…µr·∏ª…ñ!');
		expect($str.capitalize('[heƒºl·πè, Íì∫ ... ü¶ä w…µr·∏ª…ñ!]')).toBe('[heƒºl·πè, Íì∫ ... ü¶ä w…µr·∏ª…ñ!]');
		expect($str.capitalize('Foo-bar-bazBiz-PascalCase-snake_case-kebab-case')).toBe('Foo-bar-bazbiz-pascalcase-snake_case-kebab-case');
		expect($str.capitalize('Foo bar bazBiz PascalCase snake_case kebab-case')).toBe('Foo bar bazbiz pascalcase snake_case kebab-case');
		expect($str.capitalize('aeiouAEIOUaeiouyAEIOUYaeiouAEIOUanoANOaeiouyAEIOUY√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì')).toBe('Aeiouaeiouaeiouyaeiouyaeiouaeiouanoanoaeiouyaeiouy√ß√ß√ü√∏√∏√•√•√¶√¶≈ì');
		expect($str.capitalize('√†√®√¨√≤√π√Ä√à√å√í√ô√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì')).toBe('√Ä√®√¨√≤√π√†√®√¨√≤√π√°√©√≠√≥√∫√Ω√°√©√≠√≥√∫√Ω√¢√™√Æ√¥√ª√¢√™√Æ√¥√ª√£√±√µ√£√±√µ√§√´√Ø√∂√º√ø√§√´√Ø√∂√º√ø√ß√ß√ü√∏√∏√•√•√¶√¶≈ì');
		expect($str.capitalize('√Ä√à√å√í√ô√†√®√¨√≤√π√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì')).toBe('√Ä√®√¨√≤√π√†√®√¨√≤√π√°√©√≠√≥√∫√Ω√°√©√≠√≥√∫√Ω√¢√™√Æ√¥√ª√¢√™√Æ√¥√ª√£√±√µ√£√±√µ√§√´√Ø√∂√º√ø√§√´√Ø√∂√º√ø√ß√ß√ü√∏√∏√•√•√¶√¶≈ì');
	});
	test('$str.titleCase()', async () => {
		expect($str.titleCase('heƒºl·πè, Íì∫ ... ü¶ä w…µr·∏ª…ñ!')).toBe('Heƒºl·πè Íì∫ W…µr·∏ª…ñ');
		expect($str.titleCase('[heƒºl·πè, Íì∫ ... ü¶ä w…µr·∏ª…ñ!]')).toBe('Heƒºl·πè Íì∫ W…µr·∏ª…ñ');

		expect($str.titleCase('Foo-bar-bazBiz-PascalCase-snake_case-kebab-case')).toBe('Foo Bar Baz Biz Pascal Case Snake Case Kebab Case');
		expect($str.titleCase('Foo bar bazBiz PascalCase snake_case kebab-case')).toBe('Foo Bar Baz Biz Pascal Case Snake Case Kebab Case');

		expect($str.titleCase('aeiouAEIOUaeiouyAEIOUYaeiouAEIOUanoANOaeiouyAEIOUY√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì')).toBe('Aeiou Aeio Uaeiouy Aeiou Yaeiou Aeio Uano An Oaeiouy Aeiou Y√ß √á√ü √ò√∏ √Ö√• √Ü√¶≈ì');
		expect($str.titleCase('√†√®√¨√≤√π√Ä√à√å√í√ô√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì')).toBe('√Ä√®√¨√≤√π √Ä√®√¨√≤ √ô√°√©√≠√≥√∫√Ω √Å√©√≠√≥√∫ √ù√¢√™√Æ√¥√ª √Ç√™√Æ√¥ √õ√£√±√µ √É√± √ï√§√´√Ø√∂√º√ø √Ñ√´√Ø√∂√º ≈∏√ß √á√ü √ò√∏ √Ö√• √Ü√¶≈ì');
		expect($str.titleCase('√Ä√à√å√í√ô√†√®√¨√≤√π√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì')).toBe('√Ä√®√¨√≤ √ô√†√®√¨√≤√π√°√©√≠√≥√∫√Ω √Å√©√≠√≥√∫ √ù√¢√™√Æ√¥√ª √Ç√™√Æ√¥ √õ√£√±√µ √É√± √ï√§√´√Ø√∂√º√ø √Ñ√´√Ø√∂√º ≈∏√ß √á√ü √ò√∏ √Ö√• √Ü√¶≈ì');

		expect($str.titleCase('√Ä√à√å√í√ô √†√®√¨√≤√π√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì', { splitOnWhitespaceOnly: true })) //
			.toBe('√Ä√®√¨√≤√π √Ä√®√¨√≤√π√°√©√≠√≥√∫√Ω√°√©√≠√≥√∫√Ω√¢√™√Æ√¥√ª√¢√™√Æ√¥√ª√£√±√µ√£√±√µ√§√´√Ø√∂√º√ø√§√´√Ø√∂√º√ø√ß√ß√ü√∏√∏√•√•√¶√¶≈ì');

		expect($str.titleCase('√Ä√à√å√í√ô√†√®√¨√≤√π√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì', { asciiOnly: true })) //
			.toBe('Aeio Uaeiouaeiouy Aeiou Yaeiou Aeio Uano An Oaeiouy Aeiou Yc C Aa');
	});
	test('$str.lowerCase()', async () => {
		expect($str.lowerCase('heƒºl·πè, Íì∫ ... ü¶ä w…µr·∏ª…ñ!')).toBe('heƒºl·πè Íì∫ w…µr·∏ª…ñ');
		expect($str.lowerCase('[heƒºl·πè, Íì∫ ... ü¶ä w…µr·∏ª…ñ!]')).toBe('heƒºl·πè Íì∫ w…µr·∏ª…ñ');

		expect($str.lowerCase('Foo-bar-bazBiz-PascalCase-snake_case-kebab-case')).toBe('foo bar baz biz pascal case snake case kebab case');
		expect($str.lowerCase('Foo bar bazBiz PascalCase snake_case kebab-case')).toBe('foo bar baz biz pascal case snake case kebab case');

		expect($str.lowerCase('aeiouAEIOUaeiouyAEIOUYaeiouAEIOUanoANOaeiouyAEIOUY√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì')).toBe('aeiou aeio uaeiouy aeiou yaeiou aeio uano an oaeiouy aeiou y√ß √ß√ü √∏√∏ √•√• √¶√¶≈ì');
		expect($str.lowerCase('√†√®√¨√≤√π√Ä√à√å√í√ô√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì')).toBe('√†√®√¨√≤√π √†√®√¨√≤ √π√°√©√≠√≥√∫√Ω √°√©√≠√≥√∫ √Ω√¢√™√Æ√¥√ª √¢√™√Æ√¥ √ª√£√±√µ √£√± √µ√§√´√Ø√∂√º√ø √§√´√Ø√∂√º √ø√ß √ß√ü √∏√∏ √•√• √¶√¶≈ì');
		expect($str.lowerCase('√Ä√à√å√í√ô√†√®√¨√≤√π√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì')).toBe('√†√®√¨√≤ √π√†√®√¨√≤√π√°√©√≠√≥√∫√Ω √°√©√≠√≥√∫ √Ω√¢√™√Æ√¥√ª √¢√™√Æ√¥ √ª√£√±√µ √£√± √µ√§√´√Ø√∂√º√ø √§√´√Ø√∂√º √ø√ß √ß√ü √∏√∏ √•√• √¶√¶≈ì');

		expect($str.lowerCase('√Ä√à√å√í√ô √†√®√¨√≤√π√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì', { splitOnWhitespaceOnly: true })) //
			.toBe('√†√®√¨√≤√π √†√®√¨√≤√π√°√©√≠√≥√∫√Ω√°√©√≠√≥√∫√Ω√¢√™√Æ√¥√ª√¢√™√Æ√¥√ª√£√±√µ√£√±√µ√§√´√Ø√∂√º√ø√§√´√Ø√∂√º√ø√ß√ß√ü√∏√∏√•√•√¶√¶≈ì');

		expect($str.lowerCase('√Ä√à√å√í√ô√†√®√¨√≤√π√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì', { asciiOnly: true })) //
			.toBe('aeio uaeiouaeiouy aeiou yaeiou aeio uano an oaeiouy aeiou yc c aa');
	});
	test('$str.upperCase()', async () => {
		expect($str.upperCase('heƒºl·πè, Íì∫ ... ü¶ä w…µr·∏ª…ñ!')).toBe('HEƒªL·πé Íì∫ W∆üR·∏∫∆â');
		expect($str.upperCase('[heƒºl·πè, Íì∫ ... ü¶ä w…µr·∏ª…ñ!]')).toBe('HEƒªL·πé Íì∫ W∆üR·∏∫∆â');

		expect($str.upperCase('Foo-bar-bazBiz-PascalCase-snake_case-kebab-case')).toBe('FOO BAR BAZ BIZ PASCAL CASE SNAKE CASE KEBAB CASE');
		expect($str.upperCase('Foo bar bazBiz PascalCase snake_case kebab-case')).toBe('FOO BAR BAZ BIZ PASCAL CASE SNAKE CASE KEBAB CASE');

		expect($str.upperCase('aeiouAEIOUaeiouyAEIOUYaeiouAEIOUanoANOaeiouyAEIOUY√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì')).toBe('AEIOU AEIO UAEIOUY AEIOU YAEIOU AEIO UANO AN OAEIOUY AEIOU Y√á √áSS √ò√ò √Ö√Ö √Ü√Ü≈í');
		expect($str.upperCase('√†√®√¨√≤√π√Ä√à√å√í√ô√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì')).toBe('√Ä√à√å√í√ô √Ä√à√å√í √ô√Å√â√ç√ì√ö√ù √Å√â√ç√ì√ö √ù√Ç√ä√é√î√õ √Ç√ä√é√î √õ√É√ë√ï √É√ë √ï√Ñ√ã√è√ñ√ú≈∏ √Ñ√ã√è√ñ√ú ≈∏√á √áSS √ò√ò √Ö√Ö √Ü√Ü≈í');
		expect($str.upperCase('√Ä√à√å√í√ô√†√®√¨√≤√π√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì')).toBe('√Ä√à√å√í √ô√Ä√à√å√í√ô√Å√â√ç√ì√ö√ù √Å√â√ç√ì√ö √ù√Ç√ä√é√î√õ √Ç√ä√é√î √õ√É√ë√ï √É√ë √ï√Ñ√ã√è√ñ√ú≈∏ √Ñ√ã√è√ñ√ú ≈∏√á √áSS √ò√ò √Ö√Ö √Ü√Ü≈í');

		expect($str.upperCase('√Ä√à√å√í√ô √†√®√¨√≤√π√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì', { splitOnWhitespaceOnly: true })) //
			.toBe('√Ä√à√å√í√ô √Ä√à√å√í√ô√Å√â√ç√ì√ö√ù√Å√â√ç√ì√ö√ù√Ç√ä√é√î√õ√Ç√ä√é√î√õ√É√ë√ï√É√ë√ï√Ñ√ã√è√ñ√ú≈∏√Ñ√ã√è√ñ√ú≈∏√á√áSS√ò√ò√Ö√Ö√Ü√Ü≈í');

		expect($str.upperCase('√Ä√à√å√í√ô√†√®√¨√≤√π√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì', { asciiOnly: true })) //
			.toBe('AEIO UAEIOUAEIOUY AEIOU YAEIOU AEIO UANO AN OAEIOUY AEIOU YC C AA');
	});
	test('$str.camelCase()', async () => {
		expect($str.camelCase('heƒºl·πè, Íì∫ ... ü¶ä w…µr·∏ª…ñ!')).toBe('heƒºl·πèÍì∫w…µr·∏ª…ñ');
		expect($str.camelCase('[heƒºl·πè, Íì∫ ... ü¶ä w…µr·∏ª…ñ!]')).toBe('heƒºl·πèÍì∫w…µr·∏ª…ñ');

		expect($str.camelCase('Foo-bar-bazBiz-PascalCase-snake_case-kebab-case')).toBe('fooBarBazBizPascalCaseSnakeCaseKebabCase');
		expect($str.camelCase('Foo bar bazBiz PascalCase snake_case kebab-case')).toBe('fooBarBazBizPascalCaseSnakeCaseKebabCase');

		expect($str.camelCase('aeiouAEIOUaeiouyAEIOUYaeiouAEIOUanoANOaeiouyAEIOUY√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì')).toBe('aeiouAeioUaeiouyAeiouYaeiouAeioUanoAnOaeiouyAeiouY√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì');
		expect($str.camelCase('√†√®√¨√≤√π√Ä√à√å√í√ô√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì')).toBe('√†√®√¨√≤√π√Ä√®√¨√≤√ô√°√©√≠√≥√∫√Ω√Å√©√≠√≥√∫√ù√¢√™√Æ√¥√ª√Ç√™√Æ√¥√õ√£√±√µ√É√±√ï√§√´√Ø√∂√º√ø√Ñ√´√Ø√∂√º≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì');
		expect($str.camelCase('√Ä√à√å√í√ô√†√®√¨√≤√π√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì')).toBe('√†√®√¨√≤√ô√†√®√¨√≤√π√°√©√≠√≥√∫√Ω√Å√©√≠√≥√∫√ù√¢√™√Æ√¥√ª√Ç√™√Æ√¥√õ√£√±√µ√É√±√ï√§√´√Ø√∂√º√ø√Ñ√´√Ø√∂√º≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì');

		expect($str.camelCase('1√Ä√à√å√í√ô √†√®√¨√≤√π√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì', { letterFirst: 'x' })) //
			.toBe('x1√Ä√®√¨√≤√π√Ä√®√¨√≤√π√°√©√≠√≥√∫√Ω√Å√©√≠√≥√∫√ù√¢√™√Æ√¥√ª√Ç√™√Æ√¥√õ√£√±√µ√É√±√ï√§√´√Ø√∂√º√ø√Ñ√´√Ø√∂√º≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì');

		expect($str.camelCase('√Ä√à√å√í√ô√†√®√¨√≤√π√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì', { asciiOnly: true })) //
			.toBe('aeioUaeiouaeiouyAeiouYaeiouAeioUanoAnOaeiouyAeiouYcCAa');
	});
	test('$str.kebabCase()', async () => {
		expect($str.kebabCase('heƒºl·πè, Íì∫ ... ü¶ä w…µr·∏ª…ñ!')).toBe('heƒºl·πè-Íì∫w…µr·∏ª…ñ');
		expect($str.kebabCase('[heƒºl·πè, Íì∫ ... ü¶ä w…µr·∏ª…ñ!]')).toBe('heƒºl·πè-Íì∫w…µr·∏ª…ñ');

		expect($str.kebabCase('Foo-bar-bazBiz-PascalCase-snake_case-kebab-case')).toBe('foo-bar-baz-biz-pascal-case-snake-case-kebab-case');
		expect($str.kebabCase('Foo bar bazBiz PascalCase snake_case kebab-case')).toBe('foo-bar-baz-biz-pascal-case-snake-case-kebab-case');

		expect($str.kebabCase('aeiouAEIOUaeiouyAEIOUYaeiouAEIOUanoANOaeiouyAEIOUY√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì')).toBe('aeiou-aeio-uaeiouy-aeiou-yaeiou-aeio-uano-an-oaeiouy-aeiou-y√ß-√ß√ü-√∏√∏-√•√•-√¶√¶≈ì');
		expect($str.kebabCase('√†√®√¨√≤√π√Ä√à√å√í√ô√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì')).toBe('√†√®√¨√≤√π-√†√®√¨√≤-√π√°√©√≠√≥√∫√Ω-√°√©√≠√≥√∫-√Ω√¢√™√Æ√¥√ª-√¢√™√Æ√¥-√ª√£√±√µ-√£√±-√µ√§√´√Ø√∂√º√ø-√§√´√Ø√∂√º-√ø√ß-√ß√ü-√∏√∏-√•√•-√¶√¶≈ì');
		expect($str.kebabCase('√Ä√à√å√í√ô√†√®√¨√≤√π√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì')).toBe('√†√®√¨√≤-√π√†√®√¨√≤√π√°√©√≠√≥√∫√Ω-√°√©√≠√≥√∫-√Ω√¢√™√Æ√¥√ª-√¢√™√Æ√¥-√ª√£√±√µ-√£√±-√µ√§√´√Ø√∂√º√ø-√§√´√Ø√∂√º-√ø√ß-√ß√ü-√∏√∏-√•√•-√¶√¶≈ì');

		expect($str.kebabCase('1√Ä√à√å√í√ô √†√®√¨√≤√π√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì', { letterFirst: 'x' })) //
			.toBe('x1-√†√®√¨√≤√π-√†√®√¨√≤√π√°√©√≠√≥√∫√Ω-√°√©√≠√≥√∫-√Ω√¢√™√Æ√¥√ª-√¢√™√Æ√¥-√ª√£√±√µ-√£√±-√µ√§√´√Ø√∂√º√ø-√§√´√Ø√∂√º-√ø√ß-√ß√ü-√∏√∏-√•√•-√¶√¶≈ì');

		expect($str.kebabCase('√Ä√à√å√í√ô√†√®√¨√≤√π√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì', { asciiOnly: true })) //
			.toBe('aeio-uaeiouaeiouy-aeiou-yaeiou-aeio-uano-an-oaeiouy-aeiou-yc-c-aa');

		expect($str.kebabCase('Íì∫√ÄÍì∫√àÍì∫√å√í√ô√†√®√¨√≤√π√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì')) // Letter modifiers.
			.toBe('Íì∫√†Íì∫√®Íì∫√¨√≤-√π√†√®√¨√≤√π√°√©√≠√≥√∫√Ω-√°√©√≠√≥√∫-√Ω√¢√™√Æ√¥√ª-√¢√™√Æ√¥-√ª√£√±√µ-√£√±-√µ√§√´√Ø√∂√º√ø-√§√´√Ø√∂√º-√ø√ß-√ß√ü-√∏√∏-√•√•-√¶√¶≈ì');
	});
	test('$str.snakeCase()', async () => {
		expect($str.snakeCase('heƒºl·πè, Íì∫ ... ü¶ä w…µr·∏ª…ñ!')).toBe('heƒºl·πè_Íì∫w…µr·∏ª…ñ');
		expect($str.snakeCase('[heƒºl·πè, Íì∫ ... ü¶ä w…µr·∏ª…ñ!]')).toBe('heƒºl·πè_Íì∫w…µr·∏ª…ñ');

		expect($str.snakeCase('Foo-bar-bazBiz-PascalCase-snake_case-kebab-case')).toBe('foo_bar_baz_biz_pascal_case_snake_case_kebab_case');
		expect($str.snakeCase('Foo bar bazBiz PascalCase snake_case kebab-case')).toBe('foo_bar_baz_biz_pascal_case_snake_case_kebab_case');

		expect($str.snakeCase('aeiouAEIOUaeiouyAEIOUYaeiouAEIOUanoANOaeiouyAEIOUY√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì')).toBe('aeiou_aeio_uaeiouy_aeiou_yaeiou_aeio_uano_an_oaeiouy_aeiou_y√ß_√ß√ü_√∏√∏_√•√•_√¶√¶≈ì');
		expect($str.snakeCase('√†√®√¨√≤√π√Ä√à√å√í√ô√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì')).toBe('√†√®√¨√≤√π_√†√®√¨√≤_√π√°√©√≠√≥√∫√Ω_√°√©√≠√≥√∫_√Ω√¢√™√Æ√¥√ª_√¢√™√Æ√¥_√ª√£√±√µ_√£√±_√µ√§√´√Ø√∂√º√ø_√§√´√Ø√∂√º_√ø√ß_√ß√ü_√∏√∏_√•√•_√¶√¶≈ì');
		expect($str.snakeCase('√Ä√à√å√í√ô√†√®√¨√≤√π√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì')).toBe('√†√®√¨√≤_√π√†√®√¨√≤√π√°√©√≠√≥√∫√Ω_√°√©√≠√≥√∫_√Ω√¢√™√Æ√¥√ª_√¢√™√Æ√¥_√ª√£√±√µ_√£√±_√µ√§√´√Ø√∂√º√ø_√§√´√Ø√∂√º_√ø√ß_√ß√ü_√∏√∏_√•√•_√¶√¶≈ì');

		expect($str.snakeCase('1√Ä√à√å√í√ô √†√®√¨√≤√π√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì', { letterFirst: 'x' })) //
			.toBe('x1_√†√®√¨√≤√π_√†√®√¨√≤√π√°√©√≠√≥√∫√Ω_√°√©√≠√≥√∫_√Ω√¢√™√Æ√¥√ª_√¢√™√Æ√¥_√ª√£√±√µ_√£√±_√µ√§√´√Ø√∂√º√ø_√§√´√Ø√∂√º_√ø√ß_√ß√ü_√∏√∏_√•√•_√¶√¶≈ì');

		expect($str.snakeCase('√Ä√à√å√í√ô√†√®√¨√≤√π√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì', { asciiOnly: true })) //
			.toBe('aeio_uaeiouaeiouy_aeiou_yaeiou_aeio_uano_an_oaeiouy_aeiou_yc_c_aa');

		expect($str.snakeCase('Íì∫√ÄÍì∫√àÍì∫√å√í√ô√†√®√¨√≤√π√°√©√≠√≥√∫√Ω√Å√â√ç√ì√ö√ù√¢√™√Æ√¥√ª√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì')) // Letter modifiers.
			.toBe('Íì∫√†Íì∫√®Íì∫√¨√≤_√π√†√®√¨√≤√π√°√©√≠√≥√∫√Ω_√°√©√≠√≥√∫_√Ω√¢√™√Æ√¥√ª_√¢√™√Æ√¥_√ª√£√±√µ_√£√±_√µ√§√´√Ø√∂√º√ø_√§√´√Ø√∂√º_√ø√ß_√ß√ü_√∏√∏_√•√•_√¶√¶≈ì');
	});
	test('$str.parseValue()', async () => {
		expect($str.parseValue('null')).toBe(null);
		expect($str.parseValue('null*')).toBe('null');

		expect($str.parseValue('undefined')).toBe(undefined);
		expect($str.parseValue('undefined*')).toBe('undefined');

		expect($str.parseValue('true')).toBe(true);
		expect($str.parseValue('true*')).toBe('true');

		expect($str.parseValue('false')).toBe(false);
		expect($str.parseValue('false*')).toBe('false');

		expect($is.nan($str.parseValue('NaN'))).toBe(true);
		expect($str.parseValue('NaN*')).toBe('NaN');

		expect($str.parseValue('false')).toBe(false);
		expect($str.parseValue('false*')).toBe('false');

		expect($str.parseValue('-Infinity')).toBe(-Infinity);
		expect($str.parseValue('-Infinity*')).toBe('-Infinity');

		expect($str.parseValue('Infinity')).toBe(Infinity);
		expect($str.parseValue('Infinity*')).toBe('Infinity');

		expect($str.parseValue('0')).toBe(0);
		expect($str.parseValue('0*')).toBe('0');

		expect($str.parseValue('123')).toBe(123);
		expect($str.parseValue('123*')).toBe('123');

		expect($str.parseValue('0.0')).toBe(0.0);
		expect($str.parseValue('0.0*')).toBe('0.0');

		expect($str.parseValue('1.23')).toBe(1.23);
		expect($str.parseValue('1.23*')).toBe('1.23');
	});
	test('$str.matches()', async () => {
		expect($str.matches('aeiouAEIOUaeiouyAEIOUYaeiou Íì∫ ... ü¶ä √Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ìü¶ä', 'aeiou*')).toBe(true);
		expect($str.matches('aeiouAEIOUaeiouyAEIOUYaeiou Íì∫ ... ü¶ä √Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ìü¶ä', '*aeiou*')).toBe(true);
		expect($str.matches('aeiouAEIOUaeiouyAEIOUYaeiou Íì∫ ... ü¶ä √Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ìü¶ä', '*a{x,e}iou*')).toBe(true);
		expect($str.matches('aeiouAEIOUaeiouyAEIOUYaeiou Íì∫ ... ü¶ä √Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ìü¶ä', '*√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ìü¶ä')).toBe(true);
		expect($str.matches('aeiouAEIOUaeiouyAEIOUYaeiou Íì∫ ... ü¶ä √Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ìü¶ä', '*Íì∫*')).toBe(true);
		expect($str.matches('aeiouAEIOUaeiouyAEIOUYaeiou Íì∫ ... ü¶ä √Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ìü¶ä', '*ü¶ä')).toBe(true);
		expect($str.matches('aeiouAEIOUaeiouyAEIOUYaeiou Íì∫ ... ü¶ä √Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ìü¶ä', '* Íì∫ ... ü¶ä *')).toBe(true);

		expect($str.matches('aeiouAEIOUaeiouyAEIOUYaeiou Íì∫ ... ü¶ä √Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì', ' ')).toBe(false);
		expect($str.matches('aeiouAEIOUaeiouyAEIOUYaeiou Íì∫ ... ü¶ä √Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì', ' *')).toBe(false);
		expect($str.matches('aeiouAEIOUaeiouyAEIOUYaeiou Íì∫ ... ü¶ä √Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì', '*x*')).toBe(false);
		expect($str.matches('aeiouAEIOUaeiouyAEIOUYaeiou Íì∫ ... ü¶ä √Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì', '*a{x,z}iou*')).toBe(false);
		expect($str.matches('aeiouAEIOUaeiouyAEIOUYaeiou Íì∫ ... ü¶ä √Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì', '*ü¶äü¶äü¶äü¶äü¶äü¶äü¶ä*')).toBe(false);
	});
	test('$str.quote()', async () => {
		expect($str.quote('foo')).toBe("'foo'");

		expect($str.quote('aeiouAEIOUaeiouyAEIOUYaeiou√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì')) //
			.toBe("'aeiouAEIOUaeiouyAEIOUYaeiou√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì'");

		expect($str.quote("!#aeiouAE'sIOUaeiouyAEIOUYaeiou√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì")) //
			.toBe("'!#aeiouAE\\'sIOUaeiouyAEIOUYaeiou√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì'");

		expect($str.quote('foo', { type: 'single' })).toBe("'foo'");

		expect($str.quote('aeiouAEIOUaeiouyAEIOUYaeiou√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì', { type: 'single' })) //
			.toBe("'aeiouAEIOUaeiouyAEIOUYaeiou√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì'");

		expect($str.quote("!#aeiouAE'sIOUaeiouyAEIOUYaeiou√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì", { type: 'single' })) //
			.toBe("'!#aeiouAE\\'sIOUaeiouyAEIOUYaeiou√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì'");

		expect($str.quote('foo', { type: 'double' })).toBe('"foo"');

		expect($str.quote('aeiouAEIOUaeiouyAEIOUYaeiou√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì', { type: 'double' })) //
			.toBe('"aeiouAEIOUaeiouyAEIOUYaeiou√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì"');

		expect($str.quote('!#aeiouAE\'"sIOUaeiouyAEIOUYaeiou√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì', { type: 'double' })) //
			.toBe('"!#aeiouAE\'\\"sIOUaeiouyAEIOUYaeiou√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì"');
	});
	test('$str.quote()', async () => {
		expect($str.unquote($str.quote('foo'))).toBe('foo');

		expect($str.unquote($str.quote('aeiouAEIOUaeiouyAEIOUYaeiou√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì'))) //
			.toBe('aeiouAEIOUaeiouyAEIOUYaeiou√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì');

		expect($str.unquote($str.quote("!#aeiouAE'sIOUaeiouyAEIOUYaeiou√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì"))) //
			.toBe("!#aeiouAE'sIOUaeiouyAEIOUYaeiou√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì");

		expect($str.unquote($str.quote('foo', { type: 'single' }))).toBe('foo');

		expect($str.unquote($str.quote('aeiouAEIOUaeiouyAEIOUYaeiou√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì', { type: 'single' }))) //
			.toBe('aeiouAEIOUaeiouyAEIOUYaeiou√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì');

		expect($str.unquote($str.quote("!#aeiouAE'sIOUaeiouyAEIOUYaeiou√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì", { type: 'single' }))) //
			.toBe("!#aeiouAE'sIOUaeiouyAEIOUYaeiou√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì");

		expect($str.unquote($str.quote('foo', { type: 'double' }))).toBe('foo');

		expect($str.unquote($str.quote('aeiouAEIOUaeiouyAEIOUYaeiou√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì', { type: 'double' }))) //
			.toBe('aeiouAEIOUaeiouyAEIOUYaeiou√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì');

		expect($str.unquote($str.quote('!#aeiouAE\'"sIOUaeiouyAEIOUYaeiou√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì', { type: 'double' }))) //
			.toBe('!#aeiouAE\'"sIOUaeiouyAEIOUYaeiou√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì');
	});
	test('$str.escHTML()', async () => {
		expect($str.escHTML('<foo> & <"aeiouAEIOUaeiouyAEIOUYaeiou√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì\'>')) //
			.toBe('&lt;foo&gt; &amp; &lt;&quot;aeiouAEIOUaeiouyAEIOUYaeiou√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì&#39;&gt;');

		expect($str.escHTML('<foo> & &amp; <"heƒºl·πè, Íì∫ ... ü¶ä w…µr·∏ª…ñ!\'>')).toBe('&lt;foo&gt; &amp; &amp; &lt;&quot;heƒºl·πè, Íì∫ ... ü¶ä w…µr·∏ª…ñ!&#39;&gt;');
		expect($str.escHTML('<foo> & &amp; <"heƒºl·πè, Íì∫ ... ü¶ä w…µr·∏ª…ñ!\'>', { doubleEncode: true })).toBe('&lt;foo&gt; &amp; &amp;amp; &lt;&quot;heƒºl·πè, Íì∫ ... ü¶ä w…µr·∏ª…ñ!&#39;&gt;');
	});
	test('$str.unescHTML()', async () => {
		expect($str.unescHTML('&lt;foo&gt; &amp; &lt;&quot;aeiouAEIOUaeiouyAEIOUYaeiou√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì&#39;&gt;')) //
			.toBe('<foo> & <"aeiouAEIOUaeiouyAEIOUYaeiou√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì\'>');

		expect($str.unescHTML('&lt;foo&gt; &amp; &amp; &lt;&quot;heƒºl·πè, Íì∫ ... ü¶ä w…µr·∏ª…ñ!&#39;&gt;')).toBe('<foo> & & <"heƒºl·πè, Íì∫ ... ü¶ä w…µr·∏ª…ñ!\'>');
		expect($str.unescHTML('&lt;foo&gt; &amp; &amp;amp; &lt;&quot;heƒºl·πè, Íì∫ ... ü¶ä w…µr·∏ª…ñ!&#39;&gt;')).toBe('<foo> & &amp; <"heƒºl·πè, Íì∫ ... ü¶ä w…µr·∏ª…ñ!\'>');
	});
	test('$str.escRegExp()', async () => {
		expect($str.escRegExp('.*+?^${}()|[]\\')).toBe('\\.\\*\\+\\?\\^\\$\\{\\}\\(\\)\\|\\[\\]\\\\');
		expect($str.escRegExp('aeiouAEIOUaeiouyAEIOUYaeiou√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì.*+?^${}()|[]\\')) //
			.toBe('aeiouAEIOUaeiouyAEIOUYaeiou√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì\\.\\*\\+\\?\\^\\$\\{\\}\\(\\)\\|\\[\\]\\\\');
	});
	test('$str.escSelector()', async () => {
		expect($str.escSelector('!"#$%&\'()*+,./:;<=>?@[\\]^`{|}~')).toBe('\\!\\"\\#\\$\\%\\&\\\'\\(\\)\\*\\+\\,\\.\\/\\:\\;\\<\\=\\>\\?\\@\\[\\\\\\]\\^\\`\\{\\|\\}\\~');
		expect($str.escSelector('aeiouAEIOUaeiouyAEIOUYaeiou√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì!"#$%&\'()*+,./:;<=>?@[\\]^`{|}~')) //
			.toBe('aeiouAEIOUaeiouyAEIOUYaeiou√Ç√ä√é√î√õ√£√±√µ√É√ë√ï√§√´√Ø√∂√º√ø√Ñ√ã√è√ñ√ú≈∏√ß√á√ü√ò√∏√Ö√•√Ü√¶≈ì\\!\\"\\#\\$\\%\\&\\\'\\(\\)\\*\\+\\,\\.\\/\\:\\;\\<\\=\\>\\?\\@\\[\\\\\\]\\^\\`\\{\\|\\}\\~');
	});
});
