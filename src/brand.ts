/**
 * Brand utilities.
 */

import '#@initialize.ts';

import { $app, $class, $obj, $person, $str, $url, type $type } from '#index.ts';

/**
 * Tracks initialization.
 */
let rawPropsInitialized = false;

/**
 * Cache of instances keyed by package name.
 */
const instances: { [x: string]: $type.Brand } = {};

/**
 * Raw props keyed by package name.
 */
const rawProps: { [x: string]: $type.BrandRawProps } = {};

/**
 * Defines types.
 */
export type AddAppOptions = {
    pkgName?: string;
    baseURL?: string;
    props?: Partial<$type.BrandRawProps>;
};

/**
 * Defines tokens.
 *
 * Why are there so many crazy variables used here? The intention is to optimize for minification. i.e., By using as
 * many variables as we can reasonably achieve. Variables reduce number of bytes needed to reach desired outcome.
 * Remember, variable names can be minified, so the length of variable names is not an issue.
 */
const tê“ºaddress = 'address',
    tê“ºasciiOnly = 'asciiOnly',
    tê“ºadmin = 'admin',
    tê“ºassets = 'assets',
    tê“ºbrands = 'brands',
    tê“ºcity = 'city',
    tê“ºclevercanyon = 'clevercanyon',
    tê“ºCleverCanyon = 'CleverCanyon',
    tê“ºCleverð‘‚±Canyon = 'Clever Canyon',
    tê“ºcolor = 'color',
    tê“ºà´‚com = '.com',
    tê“ºcompany = 'company',
    tê“ºcontact = 'contact',
    tê“ºcontacts = 'contacts',
    tê“ºcorp = 'corp',
    tê“ºcountry = 'country',
    tê“ºdescription = 'description',
    tê“ºemail = 'email',
    tê“ºfacebook = 'facebook',
    tê“ºfgColor = 'fgColor',
    tê“ºfounder = 'founder',
    tê“ºfoundingDate = 'foundingDate',
    tê“ºà´‚gdn = '.gdn',
    tê“ºgithub = 'github',
    tê“ºheadingColor = 'headingColor',
    tê“ºheight = 'height',
    tê“ºhop = 'hop',
    tê“ºHop = 'Hop',
    tê“ºHopà´‚gdn = tê“ºHop + tê“ºà´‚gdn,
    tê“ºhostname = 'hostname',
    tê“ºmxHostname = 'mxHostname',
    tê“ºhttpsê“½â³‡â³‡ = 'https://',
    tê“ºicon = 'icon',
    tê“ºà´‚io = '.io',
    tê“ºinfo = 'info',
    tê“ºisDark = 'isDark',
    tê“ºkeybase = 'keybase',
    tê“ºlegalName = 'legalName',
    tê“ºletterFirst = 'letterFirst',
    tê“ºlineColor = 'lineColor',
    tê“ºlinkColor = 'linkColor',
    tê“ºlinkedin = 'linkedin',
    tê“ºlogo = 'logo',
    tê“ºlogoá±¼oná±¼darká±¼bg = tê“ºlogo + '-on-dark-bg',
    tê“ºlogoá±¼oná±¼lightá±¼bg = tê“ºlogo + '-on-light-bg',
    tê“ºn7m = 'n7m',
    tê“ºname = 'name',
    tê“ºnamespace = 'namespace',
    tê“ºnpm = 'npm',
    tê“ºnpmjs = tê“ºnpm + 'js',
    tê“ºnumberOfEmployees = 'numberOfEmployees',
    tê“ºogImage = 'ogImage',
    tê“ºogá±¼image = 'og-image',
    tê“ºonDarkBg = 'onDarkBg',
    tê“ºonLightBg = 'onLightBg',
    tê“ºorg = 'org',
    tê“ºpkgName = 'pkgName',
    tê“ºpng = 'png',
    tê“ºà´‚png = '.' + tê“ºpng,
    tê“ºpolicies = 'policies',
    tê“ºprivacy = 'privacy',
    tê“ºsecurity = 'security',
    tê“ºslogan = 'slogan',
    tê“ºslug = 'slug',
    tê“ºslugPrefix = 'slugPrefix',
    tê“ºsocialProfiles = 'socialProfiles',
    tê“ºstate = 'state',
    tê“ºstreet = 'street',
    tê“ºsupport = 'support',
    tê“ºsvg = 'svg',
    tê“ºà´‚svg = '.' + tê“ºsvg,
    tê“ºteam = 'team',
    tê“ºterms = 'terms',
    tê“ºtheme = 'theme',
    tê“ºtwitter = 'twitter',
    tê“ºtype = 'type',
    tê“ºurl = 'url',
    tê“ºvar = 'var',
    tê“ºvarPrefix = 'varPrefix',
    tê“ºwidth = 'width',
    tê“ºwwwà´‚ = 'www.',
    tê“ºzip = 'zip',
    //
    tê“ºclevercanyonà´‚com = tê“ºclevercanyon + tê“ºà´‚com,
    tê“ºà¶¸clevercanyonà´‚com = '@' + tê“ºclevercanyonà´‚com,
    tê“ºhttpsê“½â³‡â³‡clevercanyonà´‚com = tê“ºhttpsê“½â³‡â³‡ + tê“ºclevercanyonà´‚com,
    tê“ºhttpsê“½â³‡â³‡clevercanyonà´‚comâ³‡ = tê“ºhttpsê“½â³‡â³‡clevercanyonà´‚com + '/',
    //
    tê“ºhopà´‚gdn = tê“ºhop + tê“ºà´‚gdn,
    tê“ºà¶¸hopà´‚gdn = '@' + tê“ºhopà´‚gdn,
    tê“ºhttpsê“½â³‡â³‡hopà´‚gdn = tê“ºhttpsê“½â³‡â³‡ + tê“ºhopà´‚gdn,
    tê“ºhttpsê“½â³‡â³‡hopà´‚gdnâ³‡ = tê“ºhttpsê“½â³‡â³‡hopà´‚gdn + '/',
    //
    tê“ºà¶¸clevercanyon = '@' + tê“ºclevercanyon,
    tê“ºà¶¸clevercanyonâ³‡clevercanyonà´‚com = tê“ºà¶¸clevercanyon + '/' + tê“ºclevercanyonà´‚com,
    tê“ºà¶¸clevercanyonâ³‡hopà´‚gdn = tê“ºà¶¸clevercanyon + '/' + tê“ºhopà´‚gdn,
    //
    tê“ºhttpsê“½â³‡â³‡cdnà´‚clevercanyonà´‚comâ³‡assetsâ³‡brands = tê“ºhttpsê“½â³‡â³‡ + 'cdn.' + tê“ºclevercanyonà´‚com + '/' + tê“ºassets + '/' + tê“ºbrands,
    tê“ºhttpsê“½â³‡â³‡cdnà´‚clevercanyonà´‚comâ³‡assetsâ³‡brandsâ³‡clevercanyon = tê“ºhttpsê“½â³‡â³‡cdnà´‚clevercanyonà´‚comâ³‡assetsâ³‡brands + '/' + tê“ºclevercanyon,
    tê“ºhttpsê“½â³‡â³‡cdnà´‚clevercanyonà´‚comâ³‡assetsâ³‡brandsâ³‡hop = tê“ºhttpsê“½â³‡â³‡cdnà´‚clevercanyonà´‚comâ³‡assetsâ³‡brands + '/' + tê“ºhop,
    //
    tê“ºâ³‡assets = './' + tê“ºassets,
    tê“ºâ³‡assetsâ³‡icon = tê“ºâ³‡assets + '/' + tê“ºicon,
    tê“ºâ³‡assetsâ³‡logoá±¼oná±¼darká±¼bg = tê“ºâ³‡assets + '/' + tê“ºlogoá±¼oná±¼darká±¼bg,
    tê“ºâ³‡assetsâ³‡logoá±¼oná±¼lightá±¼bg = tê“ºâ³‡assets + '/' + tê“ºlogoá±¼oná±¼lightá±¼bg,
    tê“ºâ³‡assetsâ³‡ogá±¼image = tê“ºâ³‡assets + '/' + tê“ºogá±¼image,
    //
    tê“ºobjê“ºwidthHeight608x120 = { [tê“ºwidth]: 608, [tê“ºheight]: 120 } as { width: number; height: number },
    tê“ºobjê“ºwidthHeight866x120 = { [tê“ºwidth]: 866, [tê“ºheight]: 120 } as { width: number; height: number },
    tê“ºobjê“ºwidthHeight1024x1024 = { [tê“ºwidth]: 1024, [tê“ºheight]: 1024 } as { width: number; height: number },
    tê“ºobjê“ºwidthHeight2400x1260 = { [tê“ºwidth]: 2400, [tê“ºheight]: 1260 } as { width: number; height: number };

/**
 * Adds a new brand at runtime.
 *
 * @param   pkgName The brandâ€™s package name.
 * @param   props   Raw brand props; {@see $type.BrandRawProps}.
 *
 * @returns         Brand instance {@see $type.Brand}.
 */
export const add = (pkgName: string, props: $type.BrandRawProps): $type.Brand => {
    if (!rawPropsInitialized) initializeRawProps();

    if (Object.hasOwn(rawProps, pkgName)) {
        throw Error('rcqcXjar'); // Brand `' + pkgName + '` exists already.
    }
    rawProps[pkgName] = props;

    return get(pkgName);
};

/**
 * Removes a brand at runtime.
 *
 * @param pkgName The brandâ€™s package name.
 */
export const remove = (pkgName: string): void => {
    if (!rawPropsInitialized) initializeRawProps();

    if (Object.hasOwn(rawProps, pkgName)) {
        delete rawProps[pkgName];
    }
};

/**
 * Gets a brand instance.
 *
 * @param   pkgName Brand package name.
 *
 * @returns         Brand instance {@see $type.Brand}.
 */
export const get = (pkgName: string): $type.Brand => {
    if (!rawPropsInitialized) initializeRawProps();

    pkgName = '&' === pkgName ? tê“ºà¶¸clevercanyonâ³‡clevercanyonà´‚com : pkgName;
    // `&` is a self-referential Clever Canyon brand alias.

    if (!pkgName || !rawProps[pkgName]) {
        throw Error('NC4Pnsxq'); // Missing brand: `' + pkgName + '`.
    }
    if (instances[pkgName]) {
        return instances[pkgName];
    }
    const Brand = $class.getBrand(); // Brand class.

    if (rawProps[pkgName].org === pkgName) {
        // In this case we have to first instantiate the `org` itself, because the `org` reference is cyclic.
        // It is therefore handled by the class constructor, which interprets `undefined` as a self-referential `org`.
        instances[pkgName] = new Brand({ ...rawProps[pkgName], [tê“ºorg]: undefined });
    } else {
        // Otherwise, we simply acquire the `org` brand before instantiating.
        instances[pkgName] = new Brand({ ...rawProps[pkgName], [tê“ºorg]: get(rawProps[pkgName].org) });
    }
    return instances[pkgName];
};

/**
 * Initializes raw props.
 */
const initializeRawProps = (): void => {
    if (rawPropsInitialized) return;
    rawPropsInitialized = true;

    /**
     * Clever Canyon, LLC.
     */
    rawProps[tê“ºà¶¸clevercanyonâ³‡clevercanyonà´‚com] = {
        [tê“ºorg]: tê“ºà¶¸clevercanyonâ³‡clevercanyonà´‚com,
        [tê“ºtype]: tê“ºcorp, // Corporation.

        [tê“ºlegalName]: tê“ºCleverð‘‚±Canyon + ', LLC',
        [tê“ºaddress]: {
            [tê“ºstreet]: '9 N River Rd #660',
            [tê“ºcity]: 'Auburn',
            [tê“ºstate]: 'ME',
            [tê“ºzip]: '04210',
            [tê“ºcountry]: 'US',
        },
        [tê“ºfounder]: $person.get('&'),
        [tê“ºfoundingDate]: '2023-10-03',
        [tê“ºnumberOfEmployees]: 10,

        [tê“ºn7m]: 'c10n',
        [tê“ºname]: tê“ºCleverð‘‚±Canyon,

        [tê“ºpkgName]: tê“ºà¶¸clevercanyonâ³‡clevercanyonà´‚com,
        [tê“ºnamespace]: tê“ºCleverCanyon,

        [tê“ºhostname]: tê“ºclevercanyonà´‚com,
        [tê“ºmxHostname]: tê“ºclevercanyonà´‚com,
        [tê“ºurl]: tê“ºhttpsê“½â³‡â³‡clevercanyonà´‚comâ³‡,

        [tê“ºslug]: tê“ºclevercanyon,
        [tê“ºvar]: tê“ºclevercanyon,

        [tê“ºslugPrefix]: tê“ºclevercanyon + '-',
        [tê“ºvarPrefix]: tê“ºclevercanyon + '_',

        [tê“ºslogan]: 'Cleverly crafted digital brands.',
        [tê“ºdescription]: 'Weâ€™re transforming ideas into digital realities.',

        [tê“ºtheme]: {
            [tê“ºisDark]: true,
            [tê“ºcolor]: '#09090b',
            [tê“ºfgColor]: '#f0f0f0',
            [tê“ºlinkColor]: '#f99980',
            [tê“ºlineColor]: '#17171c',
            [tê“ºheadingColor]: '#ffffff',
        },
        [tê“ºicon]: {
            [tê“ºsvg]: tê“ºhttpsê“½â³‡â³‡cdnà´‚clevercanyonà´‚comâ³‡assetsâ³‡brandsâ³‡clevercanyon + '/' + tê“ºicon + tê“ºà´‚svg,
            [tê“ºpng]: tê“ºhttpsê“½â³‡â³‡cdnà´‚clevercanyonà´‚comâ³‡assetsâ³‡brandsâ³‡clevercanyon + '/' + tê“ºicon + tê“ºà´‚png,
            ...tê“ºobjê“ºwidthHeight1024x1024,
        },
        [tê“ºlogo]: {
            [tê“ºonDarkBg]: {
                [tê“ºsvg]: tê“ºhttpsê“½â³‡â³‡cdnà´‚clevercanyonà´‚comâ³‡assetsâ³‡brandsâ³‡clevercanyon + '/' + tê“ºlogoá±¼oná±¼darká±¼bg + tê“ºà´‚svg,
                [tê“ºpng]: tê“ºhttpsê“½â³‡â³‡cdnà´‚clevercanyonà´‚comâ³‡assetsâ³‡brandsâ³‡clevercanyon + '/' + tê“ºlogoá±¼oná±¼darká±¼bg + tê“ºà´‚png,
            },
            [tê“ºonLightBg]: {
                [tê“ºsvg]: tê“ºhttpsê“½â³‡â³‡cdnà´‚clevercanyonà´‚comâ³‡assetsâ³‡brandsâ³‡clevercanyon + '/' + tê“ºlogoá±¼oná±¼lightá±¼bg + tê“ºà´‚svg,
                [tê“ºpng]: tê“ºhttpsê“½â³‡â³‡cdnà´‚clevercanyonà´‚comâ³‡assetsâ³‡brandsâ³‡clevercanyon + '/' + tê“ºlogoá±¼oná±¼lightá±¼bg + tê“ºà´‚png,
            },
            ...tê“ºobjê“ºwidthHeight866x120,
        },
        [tê“ºogImage]: {
            [tê“ºsvg]: tê“ºhttpsê“½â³‡â³‡cdnà´‚clevercanyonà´‚comâ³‡assetsâ³‡brandsâ³‡clevercanyon + '/' + tê“ºogá±¼image + tê“ºà´‚svg,
            [tê“ºpng]: tê“ºhttpsê“½â³‡â³‡cdnà´‚clevercanyonà´‚comâ³‡assetsâ³‡brandsâ³‡clevercanyon + '/' + tê“ºogá±¼image + tê“ºà´‚png,
            ...tê“ºobjê“ºwidthHeight2400x1260,
        },
        [tê“ºpolicies]: {
            [tê“ºterms]: tê“ºhttpsê“½â³‡â³‡clevercanyonà´‚comâ³‡ + tê“ºterms,
            [tê“ºprivacy]: tê“ºhttpsê“½â³‡â³‡clevercanyonà´‚comâ³‡ + tê“ºprivacy,
        },
        [tê“ºcontacts]: {
            [tê“ºadmin]: {
                [tê“ºemail]: tê“ºadmin + tê“ºà¶¸clevercanyonà´‚com,
                [tê“ºurl]: tê“ºhttpsê“½â³‡â³‡clevercanyonà´‚comâ³‡ + tê“ºcontact,
            },
            [tê“ºinfo]: {
                [tê“ºemail]: tê“ºinfo + tê“ºà¶¸clevercanyonà´‚com,
                [tê“ºurl]: tê“ºhttpsê“½â³‡â³‡clevercanyonà´‚comâ³‡ + tê“ºcontact,
            },
            [tê“ºsupport]: {
                [tê“ºemail]: tê“ºsupport + tê“ºà¶¸clevercanyonà´‚com,
                [tê“ºurl]: tê“ºhttpsê“½â³‡â³‡clevercanyonà´‚comâ³‡ + tê“ºcontact,
            },
            [tê“ºsecurity]: {
                [tê“ºemail]: tê“ºsecurity + tê“ºà¶¸clevercanyonà´‚com,
                [tê“ºurl]: tê“ºhttpsê“½â³‡â³‡clevercanyonà´‚comâ³‡ + tê“ºcontact,
            },
            [tê“ºprivacy]: {
                [tê“ºemail]: tê“ºprivacy + tê“ºà¶¸clevercanyonà´‚com,
                [tê“ºurl]: tê“ºhttpsê“½â³‡â³‡clevercanyonà´‚comâ³‡ + tê“ºcontact,
            },
        },
        [tê“ºsocialProfiles]: {
            [tê“ºtwitter]: tê“ºhttpsê“½â³‡â³‡ + tê“ºtwitter + tê“ºà´‚com + '/' + tê“ºclevercanyon,
            [tê“ºlinkedin]: tê“ºhttpsê“½â³‡â³‡ + tê“ºwwwà´‚ + tê“ºlinkedin + tê“ºà´‚com + '/' + tê“ºcompany + '/' + tê“ºclevercanyon,
            [tê“ºfacebook]: tê“ºhttpsê“½â³‡â³‡ + tê“ºwwwà´‚ + tê“ºfacebook + tê“ºà´‚com + '/' + tê“ºclevercanyon,
            [tê“ºkeybase]: tê“ºhttpsê“½â³‡â³‡ + tê“ºkeybase + tê“ºà´‚io + '/' + tê“ºteam + '/' + tê“ºclevercanyon,
            [tê“ºgithub]: tê“ºhttpsê“½â³‡â³‡ + tê“ºgithub + tê“ºà´‚com + '/' + tê“ºclevercanyon,
            [tê“ºnpm]: tê“ºhttpsê“½â³‡â³‡ + tê“ºwwwà´‚ + tê“ºnpmjs + tê“ºà´‚com + '/' + tê“ºorg + '/' + tê“ºclevercanyon,
        },
    };

    /**
     * Clever Canyon, LLC (dba: Hop.gdn).
     */
    rawProps[tê“ºà¶¸clevercanyonâ³‡hopà´‚gdn] = $obj.mergeDeep(rawProps[tê“ºà¶¸clevercanyonâ³‡clevercanyonà´‚com], {
        $set: {
            [tê“ºorg]: tê“ºà¶¸clevercanyonâ³‡clevercanyonà´‚com,
            [tê“ºtype]: tê“ºorg, // Organization.

            [tê“ºlegalName]: tê“ºHopà´‚gdn,

            [tê“ºn7m]: 'h5n',
            [tê“ºname]: tê“ºHopà´‚gdn,

            [tê“ºpkgName]: tê“ºà¶¸clevercanyonâ³‡hopà´‚gdn,
            [tê“ºnamespace]: tê“ºHop,

            [tê“ºhostname]: tê“ºhopà´‚gdn,
            [tê“ºmxHostname]: tê“ºhopà´‚gdn,
            [tê“ºurl]: tê“ºhttpsê“½â³‡â³‡hopà´‚gdnâ³‡,

            [tê“ºslug]: tê“ºhop,
            [tê“ºvar]: tê“ºhop,

            [tê“ºslugPrefix]: tê“ºhop + '-',
            [tê“ºvarPrefix]: tê“ºhop + '_',

            [tê“ºslogan]: 'Masters of the digital divide.',
            [tê“ºdescription]: 'Great things, built on great technology.',

            [tê“ºtheme]: {
                ...rawProps[tê“ºà¶¸clevercanyonâ³‡clevercanyonà´‚com][tê“ºtheme],
                [tê“ºlinkColor]: '#80aff9',
            },
            [tê“ºicon]: {
                [tê“ºsvg]: tê“ºhttpsê“½â³‡â³‡cdnà´‚clevercanyonà´‚comâ³‡assetsâ³‡brandsâ³‡hop + '/' + tê“ºicon + tê“ºà´‚svg,
                [tê“ºpng]: tê“ºhttpsê“½â³‡â³‡cdnà´‚clevercanyonà´‚comâ³‡assetsâ³‡brandsâ³‡hop + '/' + tê“ºicon + tê“ºà´‚png,
                ...tê“ºobjê“ºwidthHeight1024x1024,
            },
            [tê“ºlogo]: {
                [tê“ºonDarkBg]: {
                    [tê“ºsvg]: tê“ºhttpsê“½â³‡â³‡cdnà´‚clevercanyonà´‚comâ³‡assetsâ³‡brandsâ³‡hop + '/' + tê“ºlogoá±¼oná±¼darká±¼bg + tê“ºà´‚svg,
                    [tê“ºpng]: tê“ºhttpsê“½â³‡â³‡cdnà´‚clevercanyonà´‚comâ³‡assetsâ³‡brandsâ³‡hop + '/' + tê“ºlogoá±¼oná±¼darká±¼bg + tê“ºà´‚png,
                },
                [tê“ºonLightBg]: {
                    [tê“ºsvg]: tê“ºhttpsê“½â³‡â³‡cdnà´‚clevercanyonà´‚comâ³‡assetsâ³‡brandsâ³‡hop + '/' + tê“ºlogoá±¼oná±¼lightá±¼bg + tê“ºà´‚svg,
                    [tê“ºpng]: tê“ºhttpsê“½â³‡â³‡cdnà´‚clevercanyonà´‚comâ³‡assetsâ³‡brandsâ³‡hop + '/' + tê“ºlogoá±¼oná±¼lightá±¼bg + tê“ºà´‚png,
                },
                ...tê“ºobjê“ºwidthHeight608x120,
            },
            [tê“ºogImage]: {
                [tê“ºsvg]: tê“ºhttpsê“½â³‡â³‡cdnà´‚clevercanyonà´‚comâ³‡assetsâ³‡brandsâ³‡hop + '/' + tê“ºogá±¼image + tê“ºà´‚svg,
                [tê“ºpng]: tê“ºhttpsê“½â³‡â³‡cdnà´‚clevercanyonà´‚comâ³‡assetsâ³‡brandsâ³‡hop + '/' + tê“ºogá±¼image + tê“ºà´‚png,
                ...tê“ºobjê“ºwidthHeight2400x1260,
            },
            [tê“ºcontacts]: {
                [tê“ºadmin]: {
                    [tê“ºemail]: tê“ºadmin + tê“ºà¶¸hopà´‚gdn,
                    [tê“ºurl]: tê“ºhttpsê“½â³‡â³‡hopà´‚gdnâ³‡ + tê“ºcontact,
                },
                [tê“ºinfo]: {
                    [tê“ºemail]: tê“ºinfo + tê“ºà¶¸hopà´‚gdn,
                    [tê“ºurl]: tê“ºhttpsê“½â³‡â³‡hopà´‚gdnâ³‡ + tê“ºcontact,
                },
                [tê“ºsupport]: {
                    [tê“ºemail]: tê“ºsupport + tê“ºà¶¸hopà´‚gdn,
                    [tê“ºurl]: tê“ºhttpsê“½â³‡â³‡hopà´‚gdnâ³‡ + tê“ºcontact,
                },
                [tê“ºsecurity]: {
                    [tê“ºemail]: tê“ºsecurity + tê“ºà¶¸hopà´‚gdn,
                    [tê“ºurl]: tê“ºhttpsê“½â³‡â³‡hopà´‚gdnâ³‡ + tê“ºcontact,
                },
                [tê“ºprivacy]: {
                    [tê“ºemail]: tê“ºprivacy + tê“ºà¶¸hopà´‚gdn,
                    [tê“ºurl]: tê“ºhttpsê“½â³‡â³‡hopà´‚gdnâ³‡ + tê“ºcontact,
                },
            },
        },
    }) as unknown as $type.BrandRawProps;
};

/**
 * Adds app as a brand, at runtime.
 *
 * Why are there so many crazy variables used here? The intention is to optimize for minification. i.e., By using as
 * many variables as we can reasonably achieve. Variables reduce number of bytes needed to reach desired outcome. Also
 * using `let` instead of `const` to shave off another few bytes. Remember, variable names can be minified, so the
 * length of variable names is not an issue. They are verbose to improve readability.
 *
 * @param   options Required; {@see AddAppOptions}.
 *
 * @returns         Brand instance {@see $type.Brand}.
 */
export const addApp = (options?: AddAppOptions): $type.Brand => {
    /**
     * Parses options.
     */
    const opts = $obj.defaults({}, options || {}, {
        pkgName: '', // Default below is {@see $app.pkgName()}.
        baseURL: '', // Default below is {@see $app.baseURL()}.
        props: undefined, // i.e., Any other raw brand props.
    }) as Required<AddAppOptions>;

    /**
     * Defines critical variables.
     */
    const pkgName = opts.pkgName || $app.pkgName(),
        baseURL = $url.parse(opts.baseURL || $app.baseURL()),
        props = opts.props || $app.brandProps(),
        org = get(props.org || tê“ºà¶¸clevercanyonâ³‡hopà´‚gdn);

    /**
     * Defines package data.
     */
    const pkgSlug = $app.pkgSlug(pkgName),
        pkgSlugAsName = $str.titleCase(pkgSlug),
        pkgSlugAsN7m = $str.numeronym(pkgSlugAsName),
        pkgSlugAsNamespace = $str.studlyCase(pkgSlug, { [tê“ºasciiOnly]: true, [tê“ºletterFirst]: 'X' }),
        pkgSlugAsVar = $str.snakeCase(pkgSlug, { [tê“ºasciiOnly]: true, [tê“ºletterFirst]: 'x' });

    /**
     * Defines relative path to URL string.
     */
    const relPathToURLString = (relPath: string): string => {
        return new URL(relPath, baseURL).toString();
    };

    /**
     * Adds runtime brand data.
     */
    return add(
        pkgName,
        $obj.mergeDeep(
            org.rawProps(),
            {
                [tê“ºorg]: org[tê“ºpkgName],
                [tê“ºtype]: props[tê“ºtype] || 'site',

                [tê“ºn7m]: pkgSlugAsN7m,
                [tê“ºname]: pkgSlugAsName,

                [tê“ºpkgName]: pkgName,
                [tê“ºnamespace]: pkgSlugAsNamespace,

                [tê“ºhostname]: baseURL[tê“ºhostname],
                [tê“ºurl]: baseURL.toString(),

                [tê“ºslug]: pkgSlug,
                [tê“ºvar]: pkgSlugAsVar,

                [tê“ºslugPrefix]: pkgSlug + '-',
                [tê“ºvarPrefix]: pkgSlugAsVar + '_',

                [tê“ºicon]: {
                    [tê“ºsvg]: relPathToURLString(tê“ºâ³‡assetsâ³‡icon + tê“ºà´‚svg),
                    [tê“ºpng]: relPathToURLString(tê“ºâ³‡assetsâ³‡icon + tê“ºà´‚png),
                },
                [tê“ºlogo]: {
                    [tê“ºonDarkBg]: {
                        [tê“ºsvg]: relPathToURLString(tê“ºâ³‡assetsâ³‡logoá±¼oná±¼darká±¼bg + tê“ºà´‚svg),
                        [tê“ºpng]: relPathToURLString(tê“ºâ³‡assetsâ³‡logoá±¼oná±¼darká±¼bg + tê“ºà´‚png),
                    },
                    [tê“ºonLightBg]: {
                        [tê“ºsvg]: relPathToURLString(tê“ºâ³‡assetsâ³‡logoá±¼oná±¼lightá±¼bg + tê“ºà´‚svg),
                        [tê“ºpng]: relPathToURLString(tê“ºâ³‡assetsâ³‡logoá±¼oná±¼lightá±¼bg + tê“ºà´‚png),
                    },
                },
                [tê“ºogImage]: {
                    [tê“ºsvg]: relPathToURLString(tê“ºâ³‡assetsâ³‡ogá±¼image + tê“ºà´‚svg),
                    [tê“ºpng]: relPathToURLString(tê“ºâ³‡assetsâ³‡ogá±¼image + tê“ºà´‚png),
                },
            },
            props,
        ) as unknown as $type.BrandRawProps,
    );
};
