/**
 * ESLint config file.
 *
 * @since 1.0.0
 *
 * @note ESLint is not aware of this config file's location.
 *       Please extend this file using `../../../tsconfig.json`.
 *
 * @see https://eslint.org/docs/latest/user-guide/configuring
 * @see https://typescript-eslint.io/docs/linting/typed-linting/monorepos
 * @see https://eslint.org/docs/latest/user-guide/command-line-interface
 *
 * @note Testing configuration: `$ npx eslint --print-config [file-to-lint]`.
 *
 * @note PLEASE DO NOT EDIT THIS FILE!
 * This file and the contents of it are updated automatically.
 * - Instead of editing this file, please review source repository {@see https://o5p.me/LevQOD}.
 */
/* eslint-env es2021, node */

const path      = require( 'path' );
let packageJson = {}; // Initialize.

try { // Try `package.json` data.
	packageJson = require( '../../../package.json' );
} catch ( e ) {
	packageJson = {};
}
module.exports = {
	root : true,

	env           : {
		es2021 : true,
	},
	extends       : [
		'eslint:recommended',
	],
	parser        : '@babel/eslint-parser',
	parserOptions : {
		ecmaVersion       : 2022,
		ecmaFeatures      : { jsx : true },
		requireConfigFile : false, // Use `babelOptions`.
		babelOptions      : require( '../webpack/babel.cjs' )(),
		sourceType        : 'module' === packageJson.type ? 'module' : 'script',
	},
	rules         : {
		'prefer-rest-params'        : [ 'off' ],
		'space-unary-ops'           : [
			'warn',
			{
				words     : true,
				nonwords  : true,
				overrides : {
					'-'  : false,
					'+'  : false,
					'--' : false,
					'++' : false,
				},
			},
		],
		'space-in-parens'           : [ 'warn', 'always' ],
		'array-bracket-spacing'     : [ 'warn', 'always' ],
		'object-curly-spacing'      : [ 'warn', 'always' ],
		'computed-property-spacing' : [ 'warn', 'always' ],
	},
	overrides     : [
		{
			files         : [ '*.{ts,tsx}', '**/*.{ts,tsx}' ],
			plugins       : [ '@typescript-eslint' ],
			extends       : [
				'eslint:recommended',
				'plugin:@typescript-eslint/recommended',
				'plugin:@typescript-eslint/recommended-requiring-type-checking',
			],
			parser        : '@typescript-eslint/parser',
			parserOptions : {
				requireConfigFile : true,
				sourceType        : 'module',
				tsconfigRootDir   : path.resolve( __dirname, '../../../src' ),
				project           : './tsconfig.json',
			},
			rules         : {
				'prefer-rest-params'        : [ 'off' ],
				'space-unary-ops'           : [
					'warn',
					{
						words     : true,
						nonwords  : true,
						overrides : {
							'-'  : false,
							'+'  : false,
							'--' : false,
							'++' : false,
						},
					},
				],
				'space-in-parens'           : [ 'warn', 'always' ],
				'array-bracket-spacing'     : [ 'warn', 'always' ],
				'object-curly-spacing'      : [ 'warn', 'always' ],
				'computed-property-spacing' : [ 'warn', 'always' ],

				'@typescript-eslint/require-await'          : [ 'off' ],
				'@typescript-eslint/no-inferrable-types'    : [ 'off' ],
				'@typescript-eslint/ban-ts-comment'         : [
					'warn', {
						'ts-check'        : 'allow-with-description',
						'ts-nocheck'      : 'allow-with-description',
						'ts-expect-error' : 'allow-with-description',
						'ts-ignore'       : 'allow-with-description',
					},
				],
				'@typescript-eslint/triple-slash-reference' : [ 'warn', { 'path' : 'never', 'types' : 'always', 'lib' : 'always' } ],
			},
		},
	],
};
